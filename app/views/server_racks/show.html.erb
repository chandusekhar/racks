<div class='ui-dialog ui-widget ui-widget-content ui-corner-all' style='width:98%; '>
	<div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">
		<span class='ui-dialog-title'><%= "#{@server_rack.name} in #{@server_rack.datacenter.name} (#{@server_rack.datacenter.location})" %></span>
	</div>
	<div id="server_rack_info" class='tabs'>
		<ul>
			<li><a href='#rack_info'>Rack info</a></li>
			<li><a href='#devices_list'>Devices</a></li>
			<li><a href='#connections'>Connections</a></li>
		</ul>
		<div id='rack_info'>
			<p><%= @server_rack.comment %></p>
			<p>Available units: <%= "#{@server_rack.units.available.count}/#{@server_rack.units.count}" %></p>
			
			<%= link_to 'Edit', edit_datacenter_server_rack_path(@server_rack.datacenter, @server_rack), :remote => true %> |
			<%= link_to 'Back', [@server_rack.datacenter, :server_racks] %>
		</div>

		<div id='devices_list'>
			<p>
				<%= link_to 'Add device', [:new, @server_rack.datacenter, @server_rack, :device], :class => 'remote button' %>
			</p>
			<div class='devices_accordion'>
				<%= render :partial => 'devices/device', :collection => @server_rack.devices, :as => :device %>
			</div>

		</div>
		<script type="text/javascript">
			var paper;
			var connectionSet;
			
			var interfaceLocations = []; //[x,y]
			var interfaceIds = [];
			var deviceConnections = []; //[device id,[leftid, rightid, color]]
			
			
			var connections;
			window.onload = function(){
				paper = Raphael("connections", 10000, 0);
				connectionSet = paper.set();
				drawAlldevices();
				drawAllConnections();
			}
			
			function drawConnection(leftX, leftY, rightX, rightY, color){
				var centerX = (300 + 500)/2;
				connectionSet.push(
					paper.path("M" + leftX + " " + leftY + 
						"C" +  centerX + " " + leftY + " " + centerX + " " + rightY + " " + rightX + " " + rightY).attr("stroke", color).attr("stroke-width", 3)
				);
			}
			function drawAlldevices(){
				//(re)init the interface arrays
				interfaceLocations = [];
				interfaceIds = [];
				deviceConnections = [];
				
				var yPos = 0;
				var xPos = 0;
				var counter = 0;
				
				var leftDeviceHeight = 0;
				var rightDeviceHeight = 0;
				var leftY = 0;
				var rightY = 0;
				<% @server_rack.devices.each do |device| %>
					var drawHeight = 0;
					//figure out where to draw it
					if ((counter % 2) == 0) {
						xPos = 10
						leftY += 5 + leftDeviceHeight;
						yPos = leftY;
						leftDeviceHeight = 100 + <%= device.interfaces.size %> * 17;
						drawHeight = leftDeviceHeight;
					}else{
						xPos = window.innerWidth - 500;
						rightY += 5 + rightDeviceHeight;
						yPos = rightY;
						rightDeviceHeight = 100 + <%= device.interfaces.size %> * 17;
						drawHeight = rightDeviceHeight;
					};
					//draw the device
					var deviceRect = paper.rect(xPos, yPos, 300, drawHeight, 5).attr("fill","#AAD0F8");
					paper.print(xPos + 10,yPos + 10, '<%= "#{device.units.first.number} - #{device.units.last.number}:" %>', paper.getFont("Verdana"), 12);
					paper.print(xPos + 10,yPos + 24, '<%= "#{device.device_type(:name)}: #{device.name}" %>', paper.getFont("Verdana"), 12);
					paper.print(xPos + 10,yPos + 38, '<%= "(#{device.company_name})" %>', paper.getFont("Verdana"), 12);
					//set the dom element to the right size
					paper.setSize(window.width, paper.height + drawHeight);
					//draw the interfaces for the device
					var interfaceCounter = 1;
					<% device.interfaces.each do |interface| %>
						//figure out where to draw the interface
						var interfaceYpos = yPos + 40 + (interfaceCounter * 20);
						var interfaceXpos = xPos;
						if (xPos == 10) {
							interfaceXpos = 310;
						};
						//draw the interface
						var interfaceCircle = paper.circle(interfaceXpos, interfaceYpos, 5).attr("fill", "#0000FF");
						//give it a name
						//find out where to put the name
						var interfaceNameX = 0;
						if (interfaceXpos==310) {
							interfaceNameX = interfaceXpos - 100;
						}else{
							interfaceNameX = interfaceXpos +10;
						};
						//print the name
						paper.print(interfaceNameX,interfaceYpos, '<%= "(#{interface.interface_type(:name)}) #{interface.name}" %>', paper.getFont("Verdana"), 12);
						//save the interface for drawing connections later
						interfaceIds.push(<%= interface.id %>);
						interfaceLocations.push([interfaceXpos, interfaceYpos]);
						interfaceCounter++;
					<% end %>
					//save the connections of the device for drawing later
					<% device.cable_connections.each do |cable_connection| %>
						deviceConnections.push([<%= device.id %>, [<%= cable_connection.left_interface_id %>, <%= cable_connection.right_interface_id %>, "<%= cable_connection.color %>"]])
					<% end %>
					
					counter++;
					deviceRect.node.onmouseover = function(){
						connectionSet.attr({opacity: 0})
						drawConnectionsForDevice(<%= device.id %>);
					}
					deviceRect.node.onmouseout = function(){
						connectionSet.attr({opacity: 1})
					}
				<% end %>
			}
			function drawConnectionsForDevice(id){
				for (var i = deviceConnections.length - 1; i >= 0; i--){
					if (deviceConnections[i][0] == id) {
						var leftX = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][0])][0];
						var leftY = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][0])][1];
						var rightX = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][1])][0];
						var rightY = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][1])][1];
						drawConnection(leftX,leftY, rightX,rightY,deviceConnections[i][1][2])
					};
					
				};
			}
			function drawAllConnections(){
				<% @server_rack.cable_connections.each do |cable_connection| %>
					var leftX = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.left_interface_id %>)][0];
					var leftY = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.left_interface_id %>)][1];
					var rightX = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.right_interface_id %>)][0];
					var rightY = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.right_interface_id %>)][1];
					drawConnection(leftX,leftY, rightX,rightY,"<%= cable_connection.color %>")
				<% end %>
			}
		</script>
		<div id='connections' class='clearfix'>
			
		</div>
	</div>
</div>