<% cache "drawing_#{dom_id(server_rack)}" do %>
<script type="text/javascript">
  var paper;
  var connectionSet;
  var devicesSet;
  var interfaceLocations = []; //[x,y]
  var interfaceIds = [];
  var deviceConnections = []; //[device id,[leftid, rightid, color]]


  var connections;
  window.onload = function(){
    paper = Raphael("connections", window.innerWidth, window.innerHeight);
    connectionSet = paper.set();
    drawAlldevices();
    drawAllConnections();
  }

  function drawConnection(leftX, leftY, rightX, rightY, color){
    var centerX = (300 + 500)/2;
    var strokeDash = ""
    // alert(color.toLowerCase)
    if (color.toLowerCase() === "white") {
      // alert("WHITE???")
      strokeDash = "-."
      color = "gray"
    };
    connectionSet.push(
      paper.path("M" + leftX + " " + leftY +
        "C" +  centerX + " " + leftY + " " + centerX + " " + rightY + " " + rightX + " " + rightY).attr("stroke", color).attr("stroke-width", 3).attr("stroke-dasharray", strokeDash)
    );
  }
  function drawAlldevices(){
    //(re)init the interface arrays
    interfaceLocations = [];
    interfaceIds = [];
    deviceConnections = [];
    devicesSet = paper.set();
    var yPos = 0;
    var xPos = 0;
    var counter = 0;

    var leftDeviceHeight = 0;
    var rightDeviceHeight = 0;
    var leftY = 0;
    var rightY = 0;
    <% server_rack.devices.each do |device| %>
      var drawHeight = 0;
      //figure out where to draw it
      if ((counter % 2) == 0) {
        xPos = 10
        leftY += 5 + leftDeviceHeight;
        yPos = leftY;
        leftDeviceHeight = 55 + <%= device.interfaces.size %> * 20;
        drawHeight = leftDeviceHeight;
      }else{
        xPos = window.innerWidth - 500;
        rightY += 5 + rightDeviceHeight;
        yPos = rightY;
        rightDeviceHeight = 55 + <%= device.interfaces.size %> * 20;
        drawHeight = rightDeviceHeight;
      };
      //draw the device
      var deviceRect<%= device.id %> = paper.rect(xPos, yPos, 300, drawHeight, 5).attr("fill","#AAD0F8");
      devicesSet.push(deviceRect<%= device.id %>)
      paper.print(xPos + 10,yPos + 10, '<%= "#{device.units.first.number} - #{device.units.last.number}:" %>', paper.getFont("Verdana"), 12);
      paper.print(xPos + 10,yPos + 24, '<%= "#{device.device_type(:name)}: #{device.name}" %>', paper.getFont("Verdana"), 12);
      paper.print(xPos + 10,yPos + 38, '<%= "(#{device.company_names})" %>', paper.getFont("Verdana"), 12);
      //set the dom element to the right size when it gets to small
      if (paper.height < (yPos +drawHeight)) {
        paper.setSize(window.width, yPos + drawHeight);
      };
      //draw the interfaces for the device
      var interfaceCounter = 1;
      <% device.interfaces.each do |interface| %>
        //figure out where to draw the interface
        var interfaceYpos = yPos + 40 + (interfaceCounter * 20);
        var interfaceXpos = xPos;
        if (xPos == 10) {
          interfaceXpos = 310;
        };
        //draw the interface
        var interfaceCircle = paper.circle(interfaceXpos, interfaceYpos, 5).attr("fill", "#0000FF");
        //give it a name
        //find out where to put the name
        var interfaceNameX = 0;
        if (interfaceXpos==310) {
          interfaceNameX = interfaceXpos - 120;
        }else{
          interfaceNameX = interfaceXpos +10;
        };
        //print the name
        paper.print(interfaceNameX,interfaceYpos, '<%= "(#{interface.interface_type(:name)}) #{interface.name}" %>', paper.getFont("Verdana"), 12);
        //save the interface for drawing connections later
        interfaceIds.push(<%= interface.id %>);
        interfaceLocations.push([interfaceXpos, interfaceYpos]);
        interfaceCounter++;
      <% end %>
      //save the connections of the device for drawing later
      <% device.cable_connections.each do |cable_connection| %>
        deviceConnections.push([<%= device.id %>, [<%= cable_connection.left_interface_id %>, <%= cable_connection.right_interface_id %>, "<%= cable_connection.color %>"]])
      <% end %>

      counter++;
      deviceRect<%= device.id %>.node.onmousedown = function(){
        if (deviceRect<%= device.id %>.attr("stroke") == "#000") {
          connectionSet.attr({opacity: 0})
          devicesSet.attr({stroke: "#000"})
          deviceRect<%= device.id %>.attr("stroke", "#00FF00")
          drawConnectionsForDevice(<%= device.id %>);
        }else{
          deviceRect<%= device.id %>.attr("stroke", "#000")
          connectionSet.attr({opacity: 1})
        };
      }
    <% end %>
  }
  function drawConnectionsForDevice(id){
    for (var i = deviceConnections.length - 1; i >= 0; i--){
      if (deviceConnections[i][0] == id) {
        if (interfaceIds.indexOf(deviceConnections[i][1][0]) > -1 && interfaceIds.indexOf(deviceConnections[i][1][1]) > -1 ){
          var leftX = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][0])][0];
          var leftY = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][0])][1];
          var rightX = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][1])][0];
          var rightY = interfaceLocations[interfaceIds.indexOf(deviceConnections[i][1][1])][1];
          drawConnection(leftX,leftY, rightX,rightY,deviceConnections[i][1][2])
        };
      };

    };
  }
  function drawAllConnections(){
    <% server_rack.cable_connections.each do |cable_connection| %>
      if (interfaceIds.indexOf(<%= cable_connection.left_interface_id %>) > -1 && interfaceIds.indexOf(<%= cable_connection.right_interface_id %>) > -1 ) {
        var leftX = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.left_interface_id %>)][0];
        var leftY = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.left_interface_id %>)][1];
        var rightX = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.right_interface_id %>)][0];
        var rightY = interfaceLocations[interfaceIds.indexOf(<%= cable_connection.right_interface_id %>)][1];
        drawConnection(leftX,leftY, rightX,rightY,"<%= cable_connection.color %>")
      };
    <% end %>
  }
</script>
<%end%>